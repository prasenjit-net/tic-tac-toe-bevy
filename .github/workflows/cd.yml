name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-release:
    name: Build Release Binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary-suffix: ''
            artifact-name: tic-tac-toe-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary-suffix: .exe
            artifact-name: tic-tac-toe-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary-suffix: ''
            artifact-name: tic-tac-toe-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary-suffix: ''
            artifact-name: tic-tac-toe-macos-aarch64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.target }}
          override: true

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
          key: ${{ matrix.target }}

      - name: Install Linux deps for Bevy
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libasound2-dev libudev-dev pkg-config libxkbcommon-dev libwayland-dev libx11-dev libxcursor-dev \
            libxi-dev libxrandr-dev libxinerama-dev

      - name: Build release binary
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Prepare binary (Unix)
        if: runner.os != 'Windows'
        run: |
          cp target/${{ matrix.target }}/release/tic-tac-toe${{ matrix.binary-suffix }} ${{ matrix.artifact-name }}
          chmod +x ${{ matrix.artifact-name }}

      - name: Prepare binary (Windows)
        if: runner.os == 'Windows'
        run: |
          copy target\${{ matrix.target }}\release\tic-tac-toe${{ matrix.binary-suffix }} ${{ matrix.artifact-name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-name }}
          if-no-files-found: error

  create-release:
    name: Create GitHub Release
    needs: build-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git tag --sort=-version:refname | sed -n '2p')
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          
          echo "Previous tag: $PREV_TAG"
          echo "Current tag: $CURRENT_TAG"
          
          # Generate changelog
          if [ -z "$PREV_TAG" ]; then
            CHANGELOG="## What's Changed\n\nInitial release\n\n"
            CHANGELOG+="### Commits\n\n"
            CHANGELOG+=$(git log --pretty=format:"- %s (%h)" | head -20)
          else
            CHANGELOG="## What's Changed\n\n"
            CHANGELOG+=$(git log ${PREV_TAG}..${CURRENT_TAG} --pretty=format:"- %s (%h)" --reverse)
          fi
          
          # Save to file
          echo -e "$CHANGELOG" > CHANGELOG.md
          
          # Also save as output for release notes
          {
            echo 'changelog<<EOF'
            cat CHANGELOG.md
            echo EOF
          } >> "$GITHUB_OUTPUT"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/tic-tac-toe-linux-x86_64/tic-tac-toe-linux-x86_64
            artifacts/tic-tac-toe-windows-x86_64.exe/tic-tac-toe-windows-x86_64.exe
            artifacts/tic-tac-toe-macos-x86_64/tic-tac-toe-macos-x86_64
            artifacts/tic-tac-toe-macos-aarch64/tic-tac-toe-macos-aarch64
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
